version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
 
  kafka:
    image: wurstmeister/kafka:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 4
      
  # https://hub.docker.com/r/bitnami/mongodb/
  mongo:
    image: bitnami/mongodb:latest
    restart: always
    environment:
      - MONGODB_ROOT_PASSWORD=admin
      - MONGODB_USERNAME=abstract
      - MONGODB_PASSWORD=admin
      - MONGODB_DATABASE=testDB
    volumes:
      - 'mongodb_data:/bitnami/mongodb'

  producer-service:
    image: private.registry.io/library-producer:latest
    ports:
      - "8080:8080"
  consumer-service:
    image: private.registry.io/library-consumer:latest
    ports:
      - "8081:8080"
volumes: 
  mongodb_data:
    driver: local
